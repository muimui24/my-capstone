generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String    @id @default(cuid())
  name             String?
  role             String    @db.VarChar(255)
  email            String?   @unique
  image            String?
  isActive         Boolean?
  creationDate     DateTime? @default(now())
  modifiedBy       String?   @db.VarChar(255)
  modificationDate DateTime? @default(now())
  firstName        String    @db.VarChar(255)
  lastName         String    @db.VarChar(255)
  middleName       String    @db.VarChar(255)
  contactNumber    String    @db.VarChar(255)
  userName         String
  password         String    @db.VarChar(255)
  accounts         Account[]
  sessions         Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model m_books {
  id               Int       @id @default(autoincrement())
  title            String    @db.VarChar(255)
  author           String    @db.VarChar(255)
  description      String?   @db.VarChar(255)
  code             String
  isActive         Boolean?
  createdby        String?   @db.VarChar(255)
  creationDate     DateTime? @default(now())
  modifiedBy       String?   @db.VarChar(255)
  modificationDate DateTime? @default(now())
  category         String
}

model m_ebooks {
  id               Int       @id @default(autoincrement())
  title            String    @db.VarChar(255)
  author           String    @db.VarChar(255)
  description      String?   @db.VarChar(255)
  downloadLink     String?   @db.VarChar(255)
  image String?
  publisher String ?
  rating           Int?
  isActive         Boolean?
  category         String
  creationDate     DateTime? @default(now())
  modifiedBy       String?   @db.VarChar(255)
  modificationDate DateTime? @default(now())

}

model m_booksInventory {
  id               Int       @id @default(autoincrement())
  isActive         Boolean?
  createdby        String    @db.VarChar(255)
  creationDate     DateTime? @default(now())
  modifiedBy       String?   @db.VarChar(255)
  modificationDate DateTime? @default(now())
  headerId         Int
  code             String    @unique(map: "code") @db.VarChar(255)

}

model m_masterTable {
  id               Int       @id @default(autoincrement())
  title            String    @unique(map: "title") @db.VarChar(255)
  note             String?   @db.VarChar(255)
  isActive         Boolean?
  createdby        String    @db.VarChar(255)
  creationDate     DateTime? @default(now())
  modifiedBy       String?   @db.VarChar(255)
  modificationDate DateTime? @default(now())
}

model m_masterTableValues {
  id               Int       @id @default(autoincrement())
  isActive         Boolean?
  createdby        String    @db.VarChar(255)
  creationDate     DateTime? @default(now())
  modifiedBy       String?   @db.VarChar(255)
  modificationDate DateTime? @default(now())
  title            String    @db.VarChar(255)
  headerId         Int
}

model t_borrowingbooks {
  id                 Int       @id @default(autoincrement())
  isActive           Boolean?
  createdby          String    @db.VarChar(255)
  creationDate       DateTime? @default(now())
  modifiedBy         String?   @db.VarChar(255)
  modificationDate   DateTime? @default(now())
  borrowingDate      DateTime  @default(now())
  issuedDate         DateTime  @default(now())
  targetreturnDate   DateTime  @default(now())
  actualDateReturned DateTime? @default(now())
  isReturned         Boolean?
  isCancelled        Boolean?
  bookId             Int
  bookCode           String    @db.VarChar(255)
  note               String?   @db.VarChar(255)

}

model t_ebookdownloads {
  id               Int       @id @default(autoincrement())
  isActive         Boolean?
  createdby        String    @db.VarChar(255)
  creationDate     DateTime? @default(now())
  modifiedBy       String?   @db.VarChar(255)
  modificationDate DateTime? @default(now())
  bookId           Int

}

model testuser {
  id       Int    @id
  username String
  password String
}

model l_books {
  id               String    @id @default(cuid())
  title            String    @db.VarChar(255)
  author           String    @db.VarChar(255)
  description      String?   @db.VarChar(255)
  code             String
  isActive         Boolean?
  createdby        String?   @db.VarChar(255)
  creationDate     DateTime? @default(now())
  modifiedBy       String?   @db.VarChar(255)
  modificationDate DateTime? @default(now())
  category         String
}
